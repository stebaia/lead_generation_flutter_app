import 'package:lead_generation_flutter_app/model/send_offline_model/send_bulk_offline_model.dart';
import 'package:lead_generation_flutter_app/model/visitor_model/visitors_object.dart';
import 'package:lead_generation_flutter_app/network/vivaticket_api.dart';
import 'package:lead_generation_flutter_app/utils_backup/envirorment.dart';
import 'package:xml2json/xml2json.dart';
import 'package:http/http.dart' as http;
import 'package:xml/xml.dart';
import 'dart:convert';

class SendOfflineService {
  final myTransformer = Xml2Json();

  Future<int> sendOffline(
      List<SendBulkOfflineModel> sendBulkList, Envirorment envirorment) async {
    var envelope = '''
      <?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <SendOffline xmlns="http://tempuri.org/">
      <js>$sendBulkList</js>
    </SendOffline>
  </soap:Body>
</soap:Envelope>
    ''';

    http.Response response = await http.post(
        Uri.parse(VivaticketApi.REQUEST_SEND_OFFLINE_BULK(envirorment)),
        headers: {
          "Content-Type": "text/xml; charset=utf-8",
          //"SOAPAction": "http://tempuri.org/GetAllCity",
          //"Host": "www.i2isoftwares.com"
          "Accept": "text/xml"
        },
        body: envelope);

    var rawXmlResponse = response.body;

// Use the xml package's 'parse' method to parse the response.
    XmlDocument customParseXml = XmlDocument.parse(rawXmlResponse);
    myTransformer.parse(rawXmlResponse);
    var jsonResponse = myTransformer.toParker();
    Map<String, dynamic> responseJson = json.decode(jsonResponse);

    AutogeneratedVisitors corseResponse =
        AutogeneratedVisitors.fromJson(responseJson);
    //LoginResult result = LoginResult.fromJson(responseJsonjj["soap:Envelope"]["soap:Body"]["LoginUtenteResponse"]["LoginUtenteResult"]);
    print("DATAResult=" + response.body);
    GetVisitatoriResponse getCorsiResult =
        corseResponse.soapEnvelope!.soapBody!.getVisitatoriResponse!;

    return int.parse(getCorsiResult.getVisitatoriResult!);
  }
}
